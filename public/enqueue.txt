#include <stdio.h>
#define SIZE 5 // Define the maximum size of the queue

// Declare the queue and its variables
int queue[SIZE];
int front = -1, rear = -1;

// Function to check if the queue is full
int isFull() {
    return (rear == SIZE - 1);
}

// Function to check if the queue is empty
int isEmpty() {
    return (front == -1 || front > rear);
}

// Function to add an element to the queue (ENQUEUE operation)
void enqueue(int value) {
    if (isFull()) {
        printf("Queue is full! Cannot enqueue %d.\n", value);
    } else {
        if (front == -1) {
            front = 0; // Initialize front if the queue was empty
        }
        rear++;
        queue[rear] = value;
        printf("Enqueued %d to the queue.\n", value);
    }
}

// Function to display the queue
void displayQueue() {
    if (isEmpty()) {
        printf("Queue is empty!\n");
    } else {
        printf("Queue elements: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

int main() {
    int choice, value;

    while (1) {
        printf("\nQueue Operations:\n");
        printf("1. Enqueue\n");
        printf("2. Display Queue\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the value to enqueue: ");
                scanf("%d", &value);
                enqueue(value);
                break;
            case 2:
                displayQueue();
                break;
            case 3:
                printf("Exiting program.\n");
                return 0;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }
}


Output
-------
Queue Operations:
1. Enqueue
2. Display Queue
3. Exit
Enter your choice: 1
Enter the value to enqueue: 10
Enqueued 10 to the queue.

Queue Operations:
1. Enqueue
2. Display Queue
3. Exit
Enter your choice: 2
Queue elements: 10

Queue Operations:
1. Enqueue
2. Display Queue
3. Exit
Enter your choice: 1
Enter the value to enqueue: 20
Enqueued 20 to the queue.

Queue Operations:
1. Enqueue
2. Display Queue
3. Exit
Enter your choice: 2
Queue elements: 10 20
